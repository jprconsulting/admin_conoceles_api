// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using conoceles_api;

#nullable disable

namespace conocelesapi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("conoceles_api.Entities.AsignacionFormulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("EditLink")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaHoraAsignacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("FormularioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("FormularioId");

                    b.ToTable("AsignacionesFormulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("longtext");

                    b.Property<int?>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("DireccionCasaCampania")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Facebook")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Instagram")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreSuplente")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<int?>("OrganizacionPoliticaId")
                        .HasColumnType("int");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("longtext");

                    b.Property<string>("Sobrenombre")
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonoPublico")
                        .HasColumnType("longtext");

                    b.Property<string>("Tiktok")
                        .HasColumnType("longtext");

                    b.Property<string>("Twitter")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("OrganizacionPoliticaId");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("conoceles_api.Entities.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreCargo")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("conoceles_api.Entities.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<bool>("ClaimValue")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("conoceles_api.Entities.ConfigGoogleForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AuthProviderX509CertUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("AuthUri")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientId")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientX509CertUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleFormId")
                        .HasColumnType("longtext");

                    b.Property<string>("PrivateKey")
                        .HasColumnType("longtext");

                    b.Property<string>("PrivateKeyId")
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectId")
                        .HasColumnType("longtext");

                    b.Property<string>("SheetName")
                        .HasColumnType("longtext");

                    b.Property<string>("SpreadsheetId")
                        .HasColumnType("longtext");

                    b.Property<string>("TokenUri")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.Property<string>("UniverseDomain")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ConfigGoogleForm");
                });

            modelBuilder.Entity("conoceles_api.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreEstado")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("conoceles_api.Entities.Formulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConfigGoogleFormId")
                        .HasColumnType("int");

                    b.Property<string>("NombreFormulario")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ConfigGoogleFormId")
                        .IsUnique();

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("conoceles_api.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreGenero")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("conoceles_api.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("conoceles_api.Entities.OrganizacionPolitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreOrganizacion")
                        .HasColumnType("longtext");

                    b.Property<int?>("TipoOrganizacionPoliticaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoOrganizacionPoliticaId");

                    b.ToTable("OrganizacionesPoliticas");
                });

            modelBuilder.Entity("conoceles_api.Entities.PreguntaFormulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FormularioId")
                        .HasColumnType("int");

                    b.Property<string>("Pregunta")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("PreguntasFormulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.RespuestaPreguntaFormulario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AsignacionFormularioId")
                        .HasColumnType("int");

                    b.Property<int?>("PreguntaFormularioId")
                        .HasColumnType("int");

                    b.Property<string>("Respuesta")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AsignacionFormularioId");

                    b.HasIndex("PreguntaFormularioId");

                    b.ToTable("RespuestasPreguntaFormulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreRol")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("conoceles_api.Entities.TipoOrganizacionPolitica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TipoOrganizacion")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TiposOrganizacionesPoliticas");
                });

            modelBuilder.Entity("conoceles_api.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("longtext");

                    b.Property<string>("ApellidoPaterno")
                        .HasColumnType("longtext");

                    b.Property<int?>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<bool>("Estatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombres")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId")
                        .IsUnique();

                    b.HasIndex("RolId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("conoceles_api.Entities.AsignacionFormulario", b =>
                {
                    b.HasOne("conoceles_api.Entities.Candidato", "Candidato")
                        .WithMany("AsignacionesFormulario")
                        .HasForeignKey("CandidatoId");

                    b.HasOne("conoceles_api.Entities.Formulario", "Formulario")
                        .WithMany("AsignacionesFormulario")
                        .HasForeignKey("FormularioId");

                    b.Navigation("Candidato");

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Candidato", b =>
                {
                    b.HasOne("conoceles_api.Entities.Cargo", "Cargo")
                        .WithMany("Candidatos")
                        .HasForeignKey("CargoId");

                    b.HasOne("conoceles_api.Entities.Estado", "Estado")
                        .WithMany("Candidatos")
                        .HasForeignKey("EstadoId");

                    b.HasOne("conoceles_api.Entities.Genero", "Genero")
                        .WithMany("Candidatos")
                        .HasForeignKey("GeneroId");

                    b.HasOne("conoceles_api.Entities.OrganizacionPolitica", "OrganizacionPolitica")
                        .WithMany("Candidatos")
                        .HasForeignKey("OrganizacionPoliticaId");

                    b.Navigation("Cargo");

                    b.Navigation("Estado");

                    b.Navigation("Genero");

                    b.Navigation("OrganizacionPolitica");
                });

            modelBuilder.Entity("conoceles_api.Entities.Claim", b =>
                {
                    b.HasOne("conoceles_api.Entities.Rol", "Rol")
                        .WithMany("Claims")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("conoceles_api.Entities.Formulario", b =>
                {
                    b.HasOne("conoceles_api.Entities.ConfigGoogleForm", "ConfigGoogleForm")
                        .WithOne("Formulario")
                        .HasForeignKey("conoceles_api.Entities.Formulario", "ConfigGoogleFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfigGoogleForm");
                });

            modelBuilder.Entity("conoceles_api.Entities.OrganizacionPolitica", b =>
                {
                    b.HasOne("conoceles_api.Entities.TipoOrganizacionPolitica", "TipoOrganizacionPolitica")
                        .WithMany("OrganizacionesPoliticas")
                        .HasForeignKey("TipoOrganizacionPoliticaId");

                    b.Navigation("TipoOrganizacionPolitica");
                });

            modelBuilder.Entity("conoceles_api.Entities.PreguntaFormulario", b =>
                {
                    b.HasOne("conoceles_api.Entities.Formulario", "Formulario")
                        .WithMany("PreguntasFormulario")
                        .HasForeignKey("FormularioId");

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.RespuestaPreguntaFormulario", b =>
                {
                    b.HasOne("conoceles_api.Entities.AsignacionFormulario", "AsignacionFormulario")
                        .WithMany("RespuestasPreguntasFormulario")
                        .HasForeignKey("AsignacionFormularioId");

                    b.HasOne("conoceles_api.Entities.PreguntaFormulario", "PreguntaFormulario")
                        .WithMany("RespuestasPreguntasFormulario")
                        .HasForeignKey("PreguntaFormularioId");

                    b.Navigation("AsignacionFormulario");

                    b.Navigation("PreguntaFormulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Usuario", b =>
                {
                    b.HasOne("conoceles_api.Entities.Candidato", "Candidato")
                        .WithOne("Usuario")
                        .HasForeignKey("conoceles_api.Entities.Usuario", "CandidatoId");

                    b.HasOne("conoceles_api.Entities.Rol", "Rol")
                        .WithOne("Usuario")
                        .HasForeignKey("conoceles_api.Entities.Usuario", "RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("conoceles_api.Entities.AsignacionFormulario", b =>
                {
                    b.Navigation("RespuestasPreguntasFormulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Candidato", b =>
                {
                    b.Navigation("AsignacionesFormulario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Cargo", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("conoceles_api.Entities.ConfigGoogleForm", b =>
                {
                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Estado", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("conoceles_api.Entities.Formulario", b =>
                {
                    b.Navigation("AsignacionesFormulario");

                    b.Navigation("PreguntasFormulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Genero", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("conoceles_api.Entities.OrganizacionPolitica", b =>
                {
                    b.Navigation("Candidatos");
                });

            modelBuilder.Entity("conoceles_api.Entities.PreguntaFormulario", b =>
                {
                    b.Navigation("RespuestasPreguntasFormulario");
                });

            modelBuilder.Entity("conoceles_api.Entities.Rol", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("conoceles_api.Entities.TipoOrganizacionPolitica", b =>
                {
                    b.Navigation("OrganizacionesPoliticas");
                });
#pragma warning restore 612, 618
        }
    }
}
